version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: newsbuddy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - newsbuddy-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: newsbuddy-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      NEWS_API_KEY: 79571b9c95fa40fd81389f6f6e79ea6d
      NEWSDATA_API_KEY: pub_bc7c0eb9ffb14c9badbce36ba8439fba
      AWS_REGION: us-east-1
      DATABASE_URL: sqlite:///app/database.sqlite
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/database:/app/database  # SQLite file storage
    networks:
      - newsbuddy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
        REACT_APP_WS_URL: ws://localhost:5000
    container_name: newsbuddy-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - newsbuddy-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: newsbuddy-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./frontend/docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - newsbuddy-network
volumes:
  redis_data:
    driver: local

networks:
  newsbuddy-network:
    driver: bridge
